<?php

namespace App\Console\Commands\Endusers;

use App\Models\Clients\Features\CommAudience;
use App\Models\Endusers\AudienceMember;
use App\Models\User;
use Illuminate\Console\Command;

/**
 * Adds the specified deets as an audience member for every client so
 * it's easy to test email functionality end-to-end.  Make sure you wipe
 * the  audience_members table before so you don't email anyone other than
 * yourself while testing locally.
 * Class SeedAudienceMember
 * @package App\Console\Commands\Endusers
 */
class AddAudienceMember extends Command
{
    /**
     * The name and signature of the console command.
     *
     * @var string
     */
    protected $signature = 'audience:add {--email= : the email of the user}';
    /**
     * The console command description.
     *
     * @var string
     */
    protected $description = 'Adds the specified user as an audience member for every client';

    /**
     * Create a new command instance.
     *
     * @return void
     */
    public function __construct()
    {
        parent::__construct();
    }

    /**
     * Execute the console command.
     *
     * @return int
     */
    public function handle()
    {
        //if userid provided, use that

        //if email provided, use that

        //if neither email or
        $user = $this->getUser();
        CommAudience::all()->each(function ($audience) use ($user) {
            AudienceMember::create(['client_id' => $audience->client_id,
                'audience_id' => $audience->id, 'entity_id' => $user->id,
                'entity_type' => 'user',
                'misc' => ['autogenerated' => true],
            ]);
        });
        $this->info('Done');
    }

    private function getUser()
    {
        $user = null;
        $email = $this->option('email');

        $ranOnce = false;
        while (! $user) {
            if (! $email) {
                if ($ranOnce) {
                    $email = $this->ask('Could not find a user with that email.  Try another?');
                } else {
                    $email = $this->ask('What is the email address of the user you want to use?');
                }
            }
            $user = User::whereEmail($email)->first();
            if (! $user) {
                $this->error("No user found with email '$email'");
                $email = null;
            }
            $ranOnce = true;
        }

        return $user;
    }
}
