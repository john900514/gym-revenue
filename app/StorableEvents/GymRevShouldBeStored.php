<?php

declare(strict_types=1);

namespace App\StorableEvents;

use App\Domain\Users\Models\User;
use Spatie\EventSourcing\StoredEvents\ShouldBeStored;

abstract class GymRevShouldBeStored extends ShouldBeStored
{
    //TODO: use enums for the metadata keys
    public function autoGenerated(): bool
    {
        return $this->metaData['auto-generated'] ?? false;
    }

    public function userId(): ?string
    {
        return $this->metaData['user_id'] ?? null;
    }

    public function accessToken(): ?string
    {
        return $this->metaData['access_token'] ?? null;
    }

    public function impersonatorUserId(): ?string
    {
        return $this->metaData['impersonator_user_id'] ?? null;
    }

    public function ipAddress(): ?string
    {
        return $this->metaData['ip-address'] ?? null;
    }

    public function user(): ?User
    {
        $userId = $this->userId();
        if (! $userId) {
            return null;
        }

        return User::withoutGlobalScopes()->find($userId);
    }

    public function apiUser()
    {
        $accessToken = $this->accessToken();
        if (! $accessToken) {
            return null;
        }

        return User::withoutGlobalScopes()->whereAccessToken($accessToken)->first();
    }

    public function impersonatorUser()
    {
        $impersonatorUserId = $this->impersonatorUserId();
        if (! $impersonatorUserId) {
            return null;
        }

        return User::withoutGlobalScopes()->find($impersonatorUserId)->first();
    }

    public function clientId(): ?string
    {
        return $this->metaData['client_id'];
    }

    public function modifiedBy()
    {
        if ($this->accessToken()) {
            return 'API';
        } elseif ($this->autoGenerated()) {
            return 'Auto Generated';
        } elseif ($this->userId() ?? null) {
            return $this->userId();
        }
    }
}
