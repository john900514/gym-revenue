input CreateLocationInput {
    gymrevenue_id: String @rules(apply: ["sometimes", "nullable", "unique:locations,gymrevenue_id"])
    location_no: String! @rules(apply: ["required", "max:50"])
#    TODO: maybe use lighthouse:validator
#    location_type: String! @rules(apply: ["required",  new Enum(LocationTypeEnum::class)])
    location_type: String! @rules(apply: ["required",  "in:store,office,headquarters"])
#    need custom validator to enforce name unique only for client UNLESS we use postgress with RLS
    name: String! @rules(apply: ["required", "max:50"])
    city: String! @rules(apply: ["required", "max:30"])
    state: String! @rules(apply: ["required", "size:2"])
    active: Boolean @rules(apply: ["sometimes"])
    zip: String @rules(apply: ["sometimes", "nullable", "size:5"])
    phone: String @rules(apply: ["sometimes", "nullable", "size:10"])
    address1: String! @rules(apply: ["required", "max:200"])
    address2: String @rules(apply: ["sometimes", "nullable", "max:200"])
    poc_phone: String @rules(apply: ["sometimes", "nullable", "size:10"])
    poc_first: String @rules(apply: ["sometimes", "nullable", "max:50"])
    poc_last: String @rules(apply: ["sometimes", "nullable", "max:50"])
    open_date: DateTime @rules(apply: ["required_if:close_date,1", "nullable","date", "before:close_date"])
    close_date: DateTime  @rules(apply: ["sometimes", "nullable","date", "after:open_date"])
}
