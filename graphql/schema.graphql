"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"Indicates what fields are available at the top level of a query operation."
type Query {
    "Find a single user by an identifying attribute."
    user(
        "Search by primary key."
        id: ID @eq @rules(apply: ["prohibits:email", "required_without:email"])

        "Search by email address."
        email: String @eq @rules(apply: ["prohibits:id", "required_without:id", "email"])
    ): User @find

    "List multiple users."
    users(
        "Filters by name. Accepts SQL LIKE wildcards `%` and `_`."
        name: String @where(operator: "like")
    ): [User!]!
    @paginate(defaultCount: 50)
        @can(ability: "users.read", model: "App\\Domain\\Users\\Models\\User")

    leads(filter: LeadsInput @scope): [Lead!]! @paginate(defaultCount: 10) @can(ability: "leads.read", model: "App\\Domain\\EndUsers\\Leads\\Projections\\Lead")

    lead_sources: [LeadSource!]! @all

    me: User @auth

}

input LeadsInput {
    nameSearch: String
}

"Account of a person who utilizes this application."
type User {
    "Unique primary key."
    id: ID!

    "Non-unique name."
    name: String!

    "Unique email address."
    email: String!

    "When the email was verified."
    email_verified_at: DateTime

    "When the account was created."
    created_at: DateTime!

    "When the account was last updated."
    updated_at: DateTime!
}

"Leads"
type Lead {
    "Unique primary key."
    id: ID!

    "Non-unique name."
    name: String!

    "Unique email address."
    email: String!

    "When the account was created."
    created_at: DateTime!

    "When the account was last updated."
    updated_at: DateTime!

    lead_source_id: String!

    leadSource: LeadSource @hasOne

}

"Lead Sources"
type LeadSource {
    "Unique primary key."
    id: ID!

    "Non-unique name."
    name: String!

    "When the account was created."
    created_at: DateTime!

    "When the account was last updated."
    updated_at: DateTime!
}
